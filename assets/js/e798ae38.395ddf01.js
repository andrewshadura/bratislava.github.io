"use strict";(self.webpackChunkbratislava_github_io=self.webpackChunkbratislava_github_io||[]).push([[824],{3905:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>b});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),p=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),u=p(n),b=r,f=u["".concat(c,".").concat(b)]||u[b]||d[b]||o;return n?a.createElement(f,s(s({ref:t},l),{},{components:n})):a.createElement(f,s({ref:t},l))}));function b(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,s=new Array(o);s[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,s[1]=i;for(var p=2;p<o;p++)s[p]=n[p];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3759:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const o={},s="Syncing database between different environments",i={unversionedId:"technologies-and-recipes/copy-database-between-envs",id:"technologies-and-recipes/copy-database-between-envs",title:"Syncing database between different environments",description:"Below is a set of commands to copy production Strapi data to staging environment - can be modified for other similar tasks. If you need exact copy of database, you should scale down strapi & next deployments and drop & recreate database before loading the data.",source:"@site/docs/technologies-and-recipes/copy-database-between-envs.md",sourceDirName:"technologies-and-recipes",slug:"/technologies-and-recipes/copy-database-between-envs",permalink:"/docs/technologies-and-recipes/copy-database-between-envs",draft:!1,editUrl:"https://github.com/bratislava/bratislava.github.io/edit/master/docs/technologies-and-recipes/copy-database-between-envs.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"About this section",permalink:"/docs/technologies-and-recipes/section-info"},next:{title:"Sentry",permalink:"/docs/technologies-and-recipes/sentry"}},c={},p=[],l={toc:p};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"syncing-database-between-different-environments"},"Syncing database between different environments"),(0,r.kt)("p",null,"Below is a set of commands to copy production Strapi data to staging environment - can be modified for other similar tasks. If you need exact copy of database, you should scale down strapi & next deployments and drop & recreate database before loading the data."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},'# below, update user@bratislava.sk, user.name and optionally strapi-backup.sql to unique file name\n\n# recommended to do step-by-step\n# skip the first step if on Magistrate network or already on vpn, skip the second if already logged in to kubernetes clusters\n\n# Step 1 - vpn\n\nsudo openfortivpn vpn.bratislava.sk:443 --username=martin.pinter --trusted-cert 249c03e8a78ee9b45b9f2afa2e13bd59da1384b7377d133fa0caff86af45b28d\n\n# Step 2 - kubectl login\n\nkubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-staging -u user@bratislava.sk\nkubectl vsphere login --server=10.10.10.1 --insecure-skip-tls-verify --tanzu-kubernetes-cluster-name=tkg-innov-prod -u user@bratislava.sk\n\n# Step 3 - download dump\n\nkubectl config use-context tkg-innov-prod\nkubectl exec -t -n standalone bratislava-strapi-database-0 -c database -- sh -c "pg_dump -c -U strapi strapi > strapi-backup.sql"\nkubectl cp standalone/bratislava-strapi-database-0:/strapi-backup.sql ./strapi-backup.sql\nkubectl config use-context tkg-innov-staging\nkubectl config get-contexts\n\n# Checkpoint - recheck that you are in correct context! \n# Step 4 - import dump\n\nkubectl cp ./strapi-backup.sql standalone/bratislava-strapi-database-0:/strapi-backup.sql\nkubectl exec -t -n standalone bratislava-strapi-database-0 -c database -- sh -c "psql -U strapi strapi < strapi-backup.sql"\n')))}d.isMDXComponent=!0}}]);