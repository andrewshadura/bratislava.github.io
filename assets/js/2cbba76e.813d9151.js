"use strict";(self.webpackChunkbratislava_github_io=self.webpackChunkbratislava_github_io||[]).push([[5173],{3905:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>d});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function s(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?s(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):s(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},s=Object.keys(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(a=0;a<s.length;a++)t=s[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var i=a.createContext({}),c=function(e){var n=a.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},l=function(e){var n=c(e.components);return a.createElement(i.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,s=e.originalType,i=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(t),d=r,g=m["".concat(i,".").concat(d)]||m[d]||u[d]||s;return t?a.createElement(g,o(o({ref:n},l),{},{components:t})):a.createElement(g,o({ref:n},l))}));function d(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var s=t.length,o=new Array(s);o[0]=m;var p={};for(var i in n)hasOwnProperty.call(n,i)&&(p[i]=n[i]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var c=2;c<s;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},4764:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>p,toc:()=>c});var a=t(7462),r=(t(7294),t(3905));const s={},o="Kubernetes",p={unversionedId:"technologies-and-recipes/NestJS/Kubernetes",id:"technologies-and-recipes/NestJS/Kubernetes",title:"Kubernetes",description:"deploy to kubernetes and environments are setup in kustomize/kustomization.yml",source:"@site/docs/technologies-and-recipes/NestJS/Kubernetes.md",sourceDirName:"technologies-and-recipes/NestJS",slug:"/technologies-and-recipes/NestJS/Kubernetes",permalink:"/docs/technologies-and-recipes/NestJS/Kubernetes",draft:!1,editUrl:"https://github.com/bratislava/bratislava.github.io/edit/master/docs/technologies-and-recipes/NestJS/Kubernetes.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Controllers",permalink:"/docs/technologies-and-recipes/NestJS/Controllers"},next:{title:"Logging",permalink:"/docs/technologies-and-recipes/NestJS/Logging"}},i={},c=[],l={toc:c};function u(e){let{components:n,...t}=e;return(0,r.kt)("wrapper",(0,a.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"kubernetes"},"Kubernetes"),(0,r.kt)("p",null,"deploy to kubernetes and environments are setup in ",(0,r.kt)("inlineCode",{parentName:"p"},"kustomize/kustomization.yml")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Example:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml"},"resources:\n  - ../../../../kustomize/bases/database\nnamePrefix: nest-{{app-name}}-\ncommonLabels:\n  app: nest-{{app-name}}\n\n# Apply ConfigMap\npatches:\n  # this target is about setup deployments, pairing secret values and replace env values with this values\n  - target:\n      name: app\n      kind: Deployment\n    patch: |-\n      - op: add\n        path: /spec/template/spec/containers/0/env\n        value:\n        - name: POSTGRES_PASSWORD\n          valueFrom:\n            secretKeyRef:\n              name: nest-{{app-name}}-db\n              key: POSTGRES_PASSWORD\n        - name: DATABASE_URL\n          value: postgresql://nest-{{app-name}}:$(POSTGRES_PASSWORD)@nest-{{app-name}}-database:5432/nest-{{app-name}}?schema=public\n        - name: PARKSYS_CLIENT_SECRET\n          valueFrom:\n            secretKeyRef:\n              name: nest-{{app-name}}-posam\n              key: PARKSYS_CLIENT_SECRET\n      - op: add\n        path: /spec/template/spec/containers/0/envFrom\n        value:\n        - configMapRef:\n            name: nest-{{app-name}}\n  # this target is about ingress and setup container url by ingres into bratislava.sk\n  - target:\n      name: ingress\n      kind: Ingress\n    patch: |-\n      - op: replace\n        path: /spec/rules/0/host\n        value: $URL_NEST_{{app-name}}\n      - op: replace\n        path: /spec/tls/0/hosts/0\n        value: $URL_NEST_{{app-name}}\n  # setup running app on port inside container\n  - target:\n      name: app\n      kind: Service\n    patch: |-\n      - op: replace\n        path: /spec/ports/0/targetPort\n        value: 3333\n  # setup running database inside container\n  - target:\n      name: database\n      kind: StatefulSet\n    patch: |-\n      - op: add\n        path: /spec/template/spec/containers/0/envFrom\n        value:\n        - secretRef:\n            name: nest-{{app-name}}-db\n\n# Rename Images\nimages:\n  - name: node\n    newName: $REPOSITORY/nest-{{app-name}}\n    newTag: $TAG\n")))}u.isMDXComponent=!0}}]);